# Enables authentication through the X-Scope-OrgID header, which must be present
# if true. If false, the OrgID will always be set to 'fake'.
# CLI flag: -auth.enabled
auth_enabled: false

# Configures the server of the launched module(s).
server:
  # HTTP server listen port.
  # CLI flag: -server.http-listen-port
  http_listen_port: 3100
  # gRPC server listen port.
  # CLI flag: -server.grpc-listen-port
  grpc_listen_port: 9096
  # Read timeout for entire HTTP request, including headers and body.
  # CLI flag: -server.http-readtimeout
  # http_server_read_timeout: 30s
  # Write timeout for HTTP server
  # CLI flag: -server.http-write-timeout
  # http_server_write_timeout: 30s

# Common configuration to be shared between multiple modules. If a more specific
# configuration is given in other sections, the related configuration within
# this section will be ignored.
common:
  path_prefix: /loki
  storage:
    filesystem:
      # Directory to store chunks in.
      # CLI flag: -common.storage.filesystem.chunk-directory
      chunks_directory: /loki/chunks
      # Directory to store rules in.
      # CLI flag: -common.storage.filesystem.rules-directory
      rules_directory: /loki/rules
  replication_factor: 1
  ring:
    # IP address to advertise in the ring.
    # CLI flag: -common.storage.ring.instance-addr
    instance_addr: 127.0.0.1
    kvstore:
      # Backend storage to use for the ring. Supported values are: consul, etcd,
      # inmemory, memberlist, multi.
      # CLI flag: -common.storage.ring.store
      store: inmemory

# The query_range block configures the query splitting and caching in the Loki
# query-frontend.
# query_range:
#   results_cache:
    # The cache_config block configures the cache backend for a specific Loki
    # component.
    # The CLI flags prefix for this block configuration is: frontend
    # cache:
    #   embedded_cache:
    #     enabled: true
    #     max_size_mb: 100

# Configures the querier. Only appropriate when running all modules or just the
# querier.
# querier:
  # The maximum number of queries that can be simultaneously processed by the
  # querier.
  # CLI flag: -querier.max-concurrent
  # max_concurrent: 2048

# The query_scheduler block configures the Loki query scheduler. When configured
# it separates the tenant query queues from the query-frontend.
# query_scheduler:
#   max_outstanding_requests_per_tenant: 2048

# Configures the chunk index schema and where it is stored.
schema_config:
  configs:
    - from: 2023-07-01
      store: tsdb
      object_store: filesystem
      schema: v13
      index:
        prefix: index_
        period: 24h
    # - from: 2020-10-24
    #   store: boltdb-shipper
    #   object_store: filesystem
    #   schema: v11
    #   index:
    #     prefix: index_
    #     period: 24h

# The ruler block configures the Loki ruler.
# ruler:
  # Comma-separated list of Alertmanager URLs to send notifications to. Each
  # Alertmanager URL is treated as a separate group in the configuration. Multiple
  # Alertmanagers in HA per group can be supported by using DNS resolution via
  # '-ruler.alertmanager-discovery'.
  # CLI flag: -ruler.alertmanager-url
  # alertmanager_url: http://localhost:9093

# The compactor block configures the compactor component, which compacts index
# shards for performance.
# compactor:
  # Directory where files can be downloaded for compaction.
  # CLI flag: -compactor.working-directory
  # working_directory: /loki/retention
  # Interval at which to re-run the compaction operation.
  # CLI flag: -compactor.compaction-interval
  # compaction_interval: 10m
  # Activate custom (per-stream,per-tenant) retention.
  # CLI flag: -compactor.retention-enabled
  # retention_enabled: true
  # Delay after which chunks will be fully deleted during retention.
  # CLI flag: -compactor.retention-delete-delay
  # retention_delete_delay: 2h
  # The total amount of worker to use to delete chunks.
  # CLI flag: -compactor.retention-delete-worker-count
  # retention_delete_worker_count: 150

# The limits_config block configures global and per-tenant limits in Loki. The
# values here can be overridden in the `overrides` section of the runtime_config
# file
# limits_config:
  # Retention period to apply to stored data, only applies if retention_enabled is
  # true in the compactor config. As of version 2.8.0, a zero value of 0 or 0s
  # disables retention. In previous releases, Loki did not properly honor a zero
  # value to disable retention and a really large value should be used instead.
  # CLI flag: -store.retention
  # retention_period: 180d
  # Limit the maximum of unique series that is returned by a metric query. When
  # the limit is reached an error is returned.
  # CLI flag: -querier.max-query-series
  # max_query_series: 100000

# Configuration for analytics.
analytics:
  # Enable anonymous usage reporting.
  # CLI flag: -reporting.enabled
  reporting_enabled: true
