# my global config
global:
  scrape_interval:     1s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 1s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  # - "first_rules.yml"
  # - "second_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'prometheus'
    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.
    static_configs:
    - targets: ['localhost:9090']

  - job_name: pushgateway
    static_configs:
    - targets: ['pushgateway:9091']

  # These are example REST API apps that can be monitored if set up.
  # Make sure the services are running.
  # - job_name: 'rest-api-server-1'
  #   static_configs:
  #   - targets: ['rest-api-server-1:8000']

  # - job_name: 'rest-api-server-2'
  #   static_configs:
  #   - targets: ['rest-api-server-2:8000']

  # - job_name: 'rest-api-server-3'
  #   static_configs:
  #   - targets: ['rest-api-server-3:8000']

  # - job_name: 'rest-api-server-4'
  #   static_configs:
  #   - targets: ['rest-api-server-4:8000']

  # - job_name: 'rest-api-server-5'
  #   static_configs:
  #   - targets: ['rest-api-server-5:8000']

  - job_name: 'rest-api-servers'
    static_configs:
    - targets: ['rest-api-server-1:8000', 'rest-api-server-2:8000', 'rest-api-server-3:8000', 'rest-api-server-4:8000', 'rest-api-server-5:8000']